group_by(condition) %>%
summarise(
mean_accuracy = mean(participant_accuracy, na.rm = TRUE),
se_accuracy = sd(participant_accuracy, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
# Accuracy by condition plot
plot <- ggplot(mean_accuracy, aes(x = condition, y = mean_accuracy)) +
geom_bar(stat = "identity", width = 0.4) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.1, color = "black") +
geom_hline(yintercept = 0.25, linetype = "dotted", color = "black") +
annotate("text", x = 3.35, y = 0.27, label = "Chance",
hjust = 0, size = 3, color = "black") +
theme_minimal() +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
labs(
title = "Participant Accuracy by Condition",
x = "Condition",
y = "Accuracy"
)
print(plot)
condition_accuracy <- data %>%
group_by(condition) %>%
summarise(Accuracy = mean(correct), .groups = 'drop')
print(condition_accuracy)
# Check participant performance above chance level
participant_accuracy <- data %>%
group_by(condition, respondent) %>%
summarise(
participant_accuracy = mean(correct, na.rm = TRUE),
.groups = "drop"
)
mean_accuracy <- participant_accuracy %>%
group_by(condition) %>%
summarise(
mean_accuracy = mean(participant_accuracy, na.rm = TRUE),
se_accuracy = sd(participant_accuracy, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
# Accuracy by condition plot
plot <- ggplot(mean_accuracy, aes(x = condition, y = mean_accuracy)) +
geom_bar(stat = "identity", width = 0.4) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.1, color = "black") +
geom_hline(yintercept = 0.25, linetype = "dotted", color = "black") +
annotate("text", x = 3.35, y = 0.27, label = "Chance",
hjust = 0, size = 3, color = "black") +
theme_minimal() +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
labs(
title = "Participant Accuracy by Condition",
x = "Condition",
y = "Accuracy"
)
print(plot)
# Check participant performance above chance level
participant_accuracy <- data %>%
group_by(condition, respondent) %>%
summarise(
participant_accuracy = mean(correct, na.rm = TRUE),
.groups = "drop"
)
mean_accuracy <- participant_accuracy %>%
group_by(condition) %>%
summarise(
mean_accuracy = mean(participant_accuracy, na.rm = TRUE),
se_accuracy = sd(participant_accuracy, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
# Accuracy by condition plot
plot <- ggplot(mean_accuracy, aes(x = condition, y = mean_accuracy)) +
geom_bar(stat = "identity", width = 0.4) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.1, color = "black") +
geom_hline(yintercept = 0.25, linetype = "dotted", color = "black") +
annotate("text", x = 3.35, y = 0.27, label = "Chance",
hjust = 0, size = 3, color = "black") +
theme_minimal() +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
labs(
title = "Participant Accuracy by Condition",
x = "Condition",
y = "Accuracy"
)
print(plot)
# Check participant performance above chance level
participant_accuracy <- data %>%
group_by(condition, respondent) %>%
summarise(
participant_accuracy = mean(correct, na.rm = TRUE),
.groups = "drop"
)
mean_accuracy <- participant_accuracy %>%
group_by(condition) %>%
summarise(
mean_accuracy = mean(participant_accuracy, na.rm = TRUE),
se_accuracy = sd(participant_accuracy, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
# Accuracy by condition plot
plot <- ggplot(mean_accuracy, aes(x = condition, y = mean_accuracy)) +
geom_bar(stat = "identity", width = 0.4) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.1, color = "black") +
geom_hline(yintercept = 0.25, linetype = "dotted", color = "black") +
annotate("text", x = 3.35, y = 0.27, label = "Chance",
hjust = 0, size = 3, color = "black") +
theme_minimal() +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
labs(
title = "Participant Accuracy by Condition",
x = "Condition",
y = "Accuracy"
)
print(plot)
condition_accuracy <- data %>%
group_by(condition) %>%
summarise(Accuracy = mean(correct), .groups = 'drop')
print(condition_accuracy)
# Check participant performance above chance level
participant_accuracy <- data %>%
group_by(condition, respondent) %>%
summarise(
participant_accuracy = mean(correct, na.rm = TRUE),
.groups = "drop"
)
mean_accuracy <- participant_accuracy %>%
group_by(condition) %>%
summarise(
mean_accuracy = mean(participant_accuracy, na.rm = TRUE),
se_accuracy = sd(participant_accuracy, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
# Accuracy by condition plot
plot <- ggplot(mean_accuracy, aes(x = condition, y = mean_accuracy)) +
geom_bar(stat = "identity", width = 0.4) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.1, color = "black") +
geom_hline(yintercept = 0.25, linetype = "dotted", color = "black") +
annotate("text", x = 3.35, y = 0.27, label = "Chance",
hjust = 0, size = 3, color = "black") +
theme_minimal() +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
labs(
title = "Participant Accuracy by Condition",
x = "Condition",
y = "Accuracy"
)
print(plot)
# Check participant performance above chance level
participant_accuracy <- data %>%
group_by(condition, respondent) %>%
summarise(
participant_accuracy = mean(correct, na.rm = TRUE),
.groups = "drop"
)
mean_accuracy <- participant_accuracy %>%
group_by(condition) %>%
summarise(
mean_accuracy = mean(participant_accuracy, na.rm = TRUE),
se_accuracy = sd(participant_accuracy, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
# Accuracy by condition plot
plot <- ggplot(mean_accuracy, aes(x = condition, y = mean_accuracy)) +
geom_bar(stat = "identity", width = 0.4) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.1, color = "black") +
geom_hline(yintercept = 0.25, linetype = "dotted", color = "black") +
annotate("text", x = 3.35, y = 0.27, label = "Chance",
hjust = 0, size = 3, color = "black") +
theme_minimal() +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
labs(
title = "Participant Accuracy by Condition",
x = "Condition",
y = "Accuracy"
)
print(plot)
# Check participant performance above chance level
participant_accuracy <- data %>%
group_by(condition, respondent) %>%
summarise(
participant_accuracy = mean(correct, na.rm = TRUE),
.groups = "drop"
)
mean_accuracy <- participant_accuracy %>%
group_by(condition) %>%
summarise(
mean_accuracy = mean(participant_accuracy, na.rm = TRUE),
se_accuracy = sd(participant_accuracy, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
# Accuracy by condition plot
ggplot(mean_accuracy, aes(x = condition, y = mean_accuracy)) +
geom_bar(stat = "identity", width = 0.4) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.1, color = "black") +
geom_hline(yintercept = 0.25, linetype = "dotted", color = "black") +
annotate("text", x = 3.35, y = 0.27, label = "Chance",
hjust = 0, size = 3, color = "black") +
theme_minimal() +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
labs(
title = "Participant Accuracy by Condition",
x = "Condition",
y = "Accuracy"
)
condition_accuracy <- data %>%
group_by(condition) %>%
summarise(Accuracy = mean(correct), .groups = 'drop')
print(condition_accuracy)
# Check participant performance above chance level
participant_accuracy <- data %>%
group_by(condition, respondent) %>%
summarise(
participant_accuracy = mean(correct, na.rm = TRUE),
.groups = "drop"
)
mean_accuracy <- participant_accuracy %>%
group_by(condition) %>%
summarise(
mean_accuracy = mean(participant_accuracy, na.rm = TRUE),
se_accuracy = sd(participant_accuracy, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
# Accuracy by condition plot
ggplot(mean_accuracy, aes(x = condition, y = mean_accuracy)) +
geom_bar(stat = "identity", width = 0.4) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.1, color = "black") +
geom_hline(yintercept = 0.25, linetype = "dotted", color = "black") +
annotate("text", x = 3.35, y = 0.27, label = "Chance",
hjust = 0, size = 3, color = "black") +
theme_minimal() +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
labs(
title = "Participant Accuracy by Condition",
x = "Condition",
y = "Accuracy"
)
# Check participant performance above chance level
participant_accuracy <- data %>%
group_by(condition, respondent) %>%
summarise(
participant_accuracy = mean(correct, na.rm = TRUE),
.groups = "drop"
)
mean_accuracy <- participant_accuracy %>%
group_by(condition) %>%
summarise(
mean_accuracy = mean(participant_accuracy, na.rm = TRUE),
se_accuracy = sd(participant_accuracy, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
# Accuracy by condition plot
ggplot(mean_accuracy, aes(x = condition, y = mean_accuracy)) +
geom_bar(stat = "identity", width = 0.4) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.1, color = "black") +
geom_hline(yintercept = 0.25, linetype = "dotted", color = "black") +
annotate("text", x = 3.35, y = 0.27, label = "Chance",
hjust = 0, size = 3, color = "black") +
theme_minimal() +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
labs(
title = "Participant Accuracy by Condition",
x = "Condition",
y = "Accuracy"
)
condition_accuracy <- data %>%
group_by(condition) %>%
summarise(Accuracy = mean(correct), .groups = 'drop')
print(condition_accuracy)
condition_accuracy <- data %>%
group_by(condition) %>%
summarise(Accuracy = mean(correct), .groups = 'drop')
condition_accuracy
# Check participant performance above chance level
participant_accuracy <- data %>%
group_by(condition, respondent) %>%
summarise(
participant_accuracy = mean(correct, na.rm = TRUE),
.groups = "drop"
)
mean_accuracy <- participant_accuracy %>%
group_by(condition) %>%
summarise(
mean_accuracy = mean(participant_accuracy, na.rm = TRUE),
se_accuracy = sd(participant_accuracy, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
# Accuracy by condition plot
ggplot(mean_accuracy, aes(x = condition, y = mean_accuracy)) +
geom_bar(stat = "identity", width = 0.4) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.1, color = "black") +
geom_hline(yintercept = 0.25, linetype = "dotted", color = "black") +
annotate("text", x = 3.35, y = 0.27, label = "Chance",
hjust = 0, size = 3, color = "black") +
theme_minimal() +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
labs(
title = "Participant Accuracy by Condition",
x = "Condition",
y = "Accuracy"
)
# Check participant performance above chance level
participant_accuracy <- data %>%
group_by(condition, respondent) %>%
summarise(
participant_accuracy = mean(correct, na.rm = TRUE),
.groups = "drop"
)
mean_accuracy <- participant_accuracy %>%
group_by(condition) %>%
summarise(
mean_accuracy = mean(participant_accuracy, na.rm = TRUE),
se_accuracy = sd(participant_accuracy, na.rm = TRUE) / sqrt(n()),
.groups = "drop"
)
# Accuracy by condition plot
ggplot(mean_accuracy, aes(x = condition, y = mean_accuracy)) +
geom_bar(stat = "identity", width = 0.4) +
geom_errorbar(aes(ymin = mean_accuracy - se_accuracy, ymax = mean_accuracy + se_accuracy),
width = 0.1, color = "black") +
geom_hline(yintercept = 0.25, linetype = "dotted", color = "black") +
annotate("text", x = 3.35, y = 0.27, label = "Chance",
hjust = 0, size = 3, color = "black") +
theme_minimal() +
scale_y_continuous(limits = c(0, 1), breaks = seq(0, 1, 0.2)) +
labs(
title = "Participant Accuracy by Condition",
x = "Condition",
y = "Accuracy"
)
response_time_summary_c1 <- data_c1 %>%
group_by(correct) %>%
summarize(
mean_response_time = mean(response_time, na.rm = TRUE),
median_response_time = median(response_time, na.rm = TRUE),
sd_response_time = sd(response_time, na.rm = TRUE)
)
print(response_time_summary_c1)
ggplot(data_c1, aes(x = factor(correct, labels = c("Incorrect", "Correct")), y = response_time)) +
geom_boxplot(fill = "skyblue3", alpha = 0.7) +
stat_summary(fun = mean, geom = "point", color = "red") +
scale_y_log10() +
labs(
title = "Response Time by Correctness Condition1",
x = "Response Accuracy",
y = "Response Time (log scale)"
) +
theme_minimal()
response_time_summary_c2 <- data_c2 %>%
group_by(correct) %>%
summarize(
mean_response_time = mean(response_time, na.rm = TRUE),
median_response_time = median(response_time, na.rm = TRUE),
sd_response_time = sd(response_time, na.rm = TRUE)
)
print(response_time_summary_c2)
ggplot(data_c2, aes(x = factor(correct, labels = c("Incorrect", "Correct")), y = response_time)) +
geom_boxplot(fill = "skyblue3", alpha = 0.7) +
stat_summary(fun = mean, geom = "point", color = "red") +
scale_y_log10() +
labs(
title = "Response Time by Correctness Condition2",
x = "Response Accuracy",
y = "Response Time (log scale)"
) +
theme_minimal()
response_time_summary_c3 <- data_c3 %>%
group_by(correct) %>%
summarize(
mean_response_time = mean(response_time, na.rm = TRUE),
median_response_time = median(response_time, na.rm = TRUE),
sd_response_time = sd(response_time, na.rm = TRUE)
)
print(response_time_summary_c3)
ggplot(data_c1, aes(x = factor(correct, labels = c("Incorrect", "Correct")), y = response_time)) +
geom_boxplot(fill = "skyblue3", alpha = 0.7) +
stat_summary(fun = mean, geom = "point", color = "red") +
scale_y_log10() +
labs(
title = "Response Time by Correctness Condition3",
x = "Response Accuracy",
y = "Response Time (log scale)"
) +
theme_minimal()
data_combined <- bind_rows(
mutate(data_c1, condition = "Condition 1"),
mutate(data_c2, condition = "Condition 2"),
mutate(data_c3, condition = "Condition 3")
)
# Summarize response times by condition and correctness (optional, for printing)
response_time_summary <- data_combined %>%
group_by(condition, correct) %>%
summarize(
mean_response_time = mean(response_time, na.rm = TRUE),
median_response_time = median(response_time, na.rm = TRUE),
sd_response_time = sd(response_time, na.rm = TRUE),
.groups = "drop"
)
print(response_time_summary)
# Create the faceted boxplot
ggplot(data_combined, aes(x = factor(correct, labels = c("Incorrect", "Correct")), y = response_time)) +
geom_boxplot(fill = "skyblue3", alpha = 0.7) +
stat_summary(fun = mean, geom = "point", color = "red", size = 3) + # Increased point size
scale_y_log10() +
facet_wrap(~ condition) +  # This creates the separate panels
labs(
title = "Response Time by Correctness Across Conditions",
x = "Response Accuracy",
y = "Response Time (log scale)"
) +
theme_minimal() +
theme(strip.text = element_text(size = 12)) #Adjust the size of facet labels
data_combined <- bind_rows(
mutate(data_c1, condition = "Condition 1"),
mutate(data_c2, condition = "Condition 2"),
mutate(data_c3, condition = "Condition 3")
)
# Summarize response times by condition and correctness (optional, for printing)
response_time_summary <- data_combined %>%
group_by(condition, correct) %>%
summarize(
mean_response_time = mean(response_time, na.rm = TRUE),
median_response_time = median(response_time, na.rm = TRUE),
sd_response_time = sd(response_time, na.rm = TRUE),
.groups = "drop"
)
print(response_time_summary)
# Create the faceted boxplot
ggplot(data_combined, aes(x = factor(correct, labels = c("Incorrect", "Correct")), y = response_time)) +
geom_boxplot(fill = "skyblue3", alpha = 0.7) +
stat_summary(fun = mean, geom = "point", color = "red", size = 3) + # Increased point size
scale_y_log10() +
facet_wrap(~ condition) +  # This creates the separate panels
labs(
title = "Response Time by Correctness Across Conditions",
x = "Response Accuracy",
y = "Response Time (log scale)"
) +
theme_minimal() +
theme(strip.text = element_text(size = 12)) #Adjust the size of facet labels
View(response_time_summary_c1)
View(response_time_summary)
response_time_by_image <- data %>%
group_by(condition, correct_image) %>%
summarise(
Mean_ResponseTime = mean(response_time, na.rm = TRUE),
.groups = 'drop'
)
ggplot(response_time_by_image, aes(x = correct_image,
y = Mean_ResponseTime,
group = condition,
color = condition)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "Response Times by Image for Each Condition",
x = "Image",
y = "Mean Response Time (ms)"
) +
scale_x_continuous(breaks = unique(response_time_by_image$correct_image)) +
facet_wrap(~condition, scales = "free_x", ncol = 1) +
theme_minimal()
response_time_by_image <- data %>%
group_by(condition, correct_image) %>%
summarise(
Mean_ResponseTime = mean(response_time, na.rm = TRUE),
.groups = 'drop'
)
ggplot(response_time_by_image, aes(x = correct_image,
y = Mean_ResponseTime,
group = condition,
color = condition)) +
#
labs(
title = "Response Times by Image for Each Condition",
x = "Image",
y = "Mean Response Time (ms)"
) +
scale_x_continuous(breaks = unique(response_time_by_image$correct_image)) +
facet_wrap(~condition, scales = "free_x", ncol = 1) +
theme_minimal()
response_time_by_image <- data %>%
group_by(condition, correct_image) %>%
summarise(
Mean_ResponseTime = mean(response_time, na.rm = TRUE),
.groups = 'drop'
)
ggplot(response_time_by_image, aes(x = correct_image,
y = Mean_ResponseTime,
group = condition,
color = condition)) +
geom_line(size = 1) +
geom_point(size = 2) +
labs(
title = "Response Times by Image for Each Condition",
x = "Image",
y = "Mean Response Time (ms)"
) +
scale_x_continuous(breaks = unique(response_time_by_image$correct_image)) +
facet_wrap(~condition, scales = "free_x", ncol = 1) +
theme_minimal()
bartlett.test(data$response_time~data$condition)
bartlett.test(data$response_time~data$correct)
bartlett.test(data$response_time~data$response_time)
bartlett.test(data$response_time~data$condition)
